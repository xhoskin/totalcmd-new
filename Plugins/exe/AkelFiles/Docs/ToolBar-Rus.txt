*****************************************************************
***                ToolBar AkelPad plugin v8.9                ***
*****************************************************************

2012 Шенгальц Александр aka Instructor (Shengalts@mail.ru)


*** Описание ***

Добавляет настраиваемую панель инструментов.


Замечания:
- Правый клик мыши (либо левый клик мыши с удерживанием клавиши Ctrl) по кнопке
  на панели инструментов открывает диалог настроек с отмеченным кодом кнопки.


*** Функции ***

ToolBar::Main
Главная функция для запуска и остановки плагина.


*** Синтаксис ***

Переменные:
  %f  активный файл
  %d  директория активного файла
  %a  директория AkelPad'а
  %m  идентификатор панели инструментов (handle)
  %i  идентификатор кнопки
  %bl левый угол нажатой кнопки в экранных координатах
  %bt верхний угол нажатой кнопки в экранных координатах
  %br правый угол нажатой кнопки в экранных координатах
  %bb нижний угол нажатой кнопки в экранных координатах
  %% символ %
  %системная переменная%

Комментарии:
  # комментарий
  ; комментарий

Специальные пункты:
  SEPARATOR
    кнопка разделитель.
  BREAK
    перенос последующих кнопок на новую строку. Если кнопке предшествует SEPARATOR, то новая
    строка будет отделена разделителем. BREAK работает только при горизонтальном расположении панели.
  SET(флаги)
    устанавливает флаг обработки текста (не отменяет уже установленные). Задается суммой членов:
       1 игнорировать последующие строки, если используется режим SDI.
       2 игнорировать последующие строки, если используется режим MDI.
       4 игнорировать последующие строки, если используется режим PMDI.
  UNSET(флаги)
    снимает флаг обработки текста. См. SET() для описания.

Создание кнопки:
  [-]"[текст кнопки]" [Command() | Call() | +Call() | Exec() | OpenFile() | SaveFile() | Font() | Recode() | Insert() | Menu()] Icon()

  [-]"[текст кнопки]"
    "Моя кнопка"
      текст появляющийся во всплывающей подсказке, при наведении мышкой на кнопку.
    -"Моя кнопка"
      при наличии знака минуса, кнопка не будет каким-либо образом менять свой статус
      (становиться неактивной, вдавливаться).
    ""
      при отсутствии текста кнопки, а также использовании метода Command(), берется текст
      пункта главного меню, на который ссылается метод Command().

    Command(номер)
      Command(4162)
        метод вызывает внутреннюю команду под номером 4162. В данном случае этот код
        отвечает за открытие диалогового окна "Перейти к строке...".
        Для полного перечня команд: см. AkelHelp-Rus.htm или AkelDLL.h в исходных кодах плагина.
    Call("Плагин::Функция", [дополнительные параметры])
      Call("Scripts::Main")
        метод вызывает плагин Scripts и функцию Main.
    +Call("Плагин::Функция", [дополнительные параметры])
      +Call("LineBoard::Main")
        метод вызывает плагин LineBoard и функцию Main. Плагин также будет работать после
        перезагрузки программы.
    Exec("командная строка", ["рабочая директория"])
      Exec("notepad.exe")
        метод вызывает блокнот.
      Exec(`notepad.exe`)
        метод вызывает блокнот.
      Exec('notepad.exe')
        метод вызывает блокнот.
      Exec('%windir%\notepad.exe')
        метод вызывает блокнот.
      Exec(`rundll32.exe shell32,ShellExec_RunDLL "%f"`, "%d")
        метод передает активный файл для открытия по ассоциации Windows.
    OpenFile("файл", [Кодировка], [СигнатураBOM])
      "файл"
        Файл для открытия.
      Кодировка
        Кодировка открытия. Если -1 либо не указана, она будет определена автоматически.
      СигнатураBOM
        Сигнатура BOM файла. Если -1 либо не указана, она будет определена автоматически.
      OpenFile("C:\File.txt", 65001, -1)
        метод открывает файл в кодировке UTF-8.
    SaveFile("файл", [Кодировка], [СигнатураBOM])
      "файл"
        Сохранение текущего документа в указанный файл.
      Кодировка
        Кодировка сохранения. Если -1 либо не указана, будет использована текущая кодировка.
      СигнатураBOM
        Сигнатура BOM файла. 1 - присутствует, 0 - отсутствует, -1 либо не указана - используется текущий BOM.
      SaveFile("C:\File.txt", 65001, 0)
        метод сохраняет файл в кодировке UTF-8 без BOM.
    Font("Шрифт", Начертание, Размер)
      "Шрифт"
        Имя шрифта, например, "Courier". Не изменяется, если "".
      Начертание (одно из следующих):
        0  игнорировать.
        1  обычный шрифт.
        2  жирный шрифт.
        3  курсивный шрифт.
        4  жирный курсивный шрифт.
      Размер
        Размер шрифта. Не изменяется, если 0.
      Font("Courier", 4, 10)
        метод устанавливает жирный курсив Courier шрифт размером 10 pt.
    Recode(ПерекодироватьИз, ПерекодироватьВ)
      ПерекодироватьИз
        Кодировка источник. Если -1, она будет определена автоматически.
      ПерекодироватьВ
        Кодировка приемник. Если -1, она будет определена автоматически.
      Recode(1251, 866)
        метод перекодирует текст из кодировки 1251 в 866.
    Insert("текст", [Esc-последовательности])
      "текст"
        Вставляемый текст.
      Esc-последовательности:
        0  "текст" не содержит Esc-последовательностей (по умолчанию).
        1  "текст" содержит Esc-последовательности. Набор последовательностей аналогичен
           диалогу поиска/замены в программе, а также:
           "\s" - заменяется на выделенный в окне редактирования текст;
           "\|" - указывает на положение каретки после вставки текста.
      Insert("Некая строка")
        метод заменяет выделение на указанный текст.
      Insert("<B>\s</B>", 1)
        метод добавляет к выделению текст по краям.
      Insert("\[0031 0032 0033]", 1)
        метод заменяет выделение на "123".

    Menu("ИМЯ МЕНЮ")
      "ИМЯ МЕНЮ"
        Название подменю из "Меню ContextMenu::Show" (ContextMenu плагин).
        Если метод используется как дополнительный, например с Command(), то меню отображается по нажатию на стрелочку.
        Если метод используется один, то стрелочка не рисуется и меню отображается по нажатию на кнопку.
        Пример:
          1. Создадим новую кнопку.
               "Специальные символы" +Call("SpecialChar::Main") Menu("SPECIALCHAR") Icon("%a\AkelFiles\Plugs\SpecialChar.dll", 0)
          2. Создадим новое подменю. Для этого откроем "Главное меню->Настройки->Плагины...->ContextMenu::Main",
             выберем "Меню ContextMenu::Show" и добавим код подменю:
               "SPECIALCHAR"
               {
                 "Настроить..." Call("SpecialChar::Settings")
               }

    Icon(["файл"], [индекс])
      Icon("Shell32.dll", 47)
        иконка находится в файле Shell32.dll под индексом 47.
      Icon("%a\AkelFiles\Plugs\Explorer.dll")
        иконка находится в файле Explorer.dll под индексом 0.
      Icon("%a\AkelFiles\Plugs\Toolbar\MyIcon.ico")
        иконка находится в файле MyIcon.ico.
      Icon(12)
        иконка находится в файле ToolBar.dll под индексом 12.

Примеры:
  "Перекодировать выделение" Command(4182) Icon(0)
  "" Command(4182) Icon(0)
  "Сортировать строки" Call("Format::LineSortStrAsc") Icon(0)
  -"Проверить орфографию" Call("Scripts::Main", 1, "SpellCheck.js", "") Icon(0)
  "Подсветка синтаксиса" +Call("Coder::Highlight") Icon(0)
  "Редактор реестра" Exec("regedit.exe") Icon("regedit.exe")
